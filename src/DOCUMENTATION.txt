
ContentCraft AI - Project Documentation
Version: 3.0 (Reflecting User Dashboard at `/creator-dashboard`)

Table of Contents
-----------------
1. Project Overview
2. Core Architecture
3. Detailed Feature Breakdown
    3.1 User-Facing Features (Creator Dashboard)
    3.2 Admin Features
4. Data Models
5. AI Integration
6. Setup & Configuration
7. Middleware & Security
8. Future Enhancements

-----------------
1. Project Overview
-----------------
ContentCraft AI is a Next.js web application designed as a multi-agent AI content creation system. The application now features a clear separation between user and admin functionalities. Authenticated users (with the 'editor' role) can access a comprehensive Creator Dashboard at `/creator-dashboard` to create and manage their own AI-driven content campaigns. The system supports brand analysis, simulated agent debates, content strategy generation, and multi-format content production with tools for revision, translation, and performance optimization. A comprehensive Admin Dashboard at `/admin/dashboard` provides tools for platform oversight, user management (roles, banning), campaign and content version moderation, and platform analytics.

-----------------
2. Core Architecture
-----------------
*   **Frontend**:
    *   Next.js 15+ (App Router)
    *   React 18+ (Functional Components, Hooks)
    *   TypeScript
    *   ShadCN UI Components (for UI primitives)
    *   Tailwind CSS (for styling)
    *   NextAuth.js Client (for session management, `useSession`)
    *   Recharts (for data visualization in admin dashboard)

*   **Backend**:
    *   Next.js API Routes (for RESTful services, including admin-specific and user-specific endpoints)
    *   Genkit (for orchestrating AI model interactions, specifically Google Gemini)
    *   Node.js runtime environment

*   **Database**:
    *   MongoDB (NoSQL database for storing user data, campaigns, feedback logs, etc.)
    *   Accessed via the official `mongodb` Node.js driver.

*   **Authentication**:
    *   NextAuth.js (handles user sign-in, sign-up, JWT session management)
    *   Supports Credentials (email/password) and Google OAuth providers.
    *   User roles ('viewer', 'editor', 'admin') stored in DB and included in session token. New users default to 'editor'.

*   **Middleware**:
    *   Next.js middleware (`src/middleware.ts`) protects routes.
    *   `/creator-dashboard/*` requires authentication.
    *   `/admin/*` requires authentication and an 'admin' role.
    *   Handles banned user access.

*   **AI Models**:
    *   Google Gemini (via Genkit and `@genkit-ai/googleai` plugin) for text generation, analysis, translation, etc.

-----------------
3. Detailed Feature Breakdown
-----------------

    3.1 User-Facing Features (Creator Dashboard)
    ------------------------
    *   **User Authentication**:
        *   Secure sign-up and login via email/password or Google. New users default to 'editor' role.

    *   **Creator Dashboard**:
        *   Main hub for authenticated users at `/creator-dashboard`.
        *   Lists all campaigns created by the current user.
        *   Provides an interface to create new campaigns.
        *   Allows users to drill down into a detailed view for each campaign.

    *   **Campaign Creation & Management**:
        *   Users can create, view, edit, and delete their own campaigns.
        *   Input creative briefs, target audience, and desired tone.
        *   Key Files: `src/app/creator-dashboard/page.tsx`, `src/app/creator-dashboard/components/CreateCampaignForm.tsx`.

    *   **Campaign Detail View & AI Tools**:
        *   Central workspace for a single campaign.
        *   **Brand Profile Analysis**: Users can paste text to generate a brand profile (tone, values, etc.) for the campaign using an AI flow.
        *   **Creative War Room**: Users can trigger a simulated debate between AI agents based on the campaign brief. The debate log is displayed.
        *   **Content Strategy Calendar**: Users can generate a 7-day content schedule with platform and format recommendations.
        *   **Content Versioning**: Displays generated content. Each piece of content has access to the following tools:
            *   **Revise**: Rewrite content with new instructions.
            *   **Audit**: Check content alignment against the generated Brand Profile.
            *   **Translate**: Localize content to different languages.
            *   **Optimize**: Improve content based on a performance goal (e.g., engagement, CTR).
        *   Key Files: `src/app/creator-dashboard/components/CampaignDetailClient.tsx`.

    *   **Gamification / Creative XP System**:
        *   XP and Level are displayed in the site header for logged-in users.

    *   **API-Based Settings**:
        *   User profile (name) and password changes are supported via API endpoints (`/api/user/*`). A dedicated settings UI is not present but can be added.


    3.2 Admin Features
    ------------------
    *   **Admin Dashboard & Platform Overview**:
        *   Centralized control panel for administrators at `/admin/dashboard`.
        *   Displays summary statistics, charts for platform activity, and an XP leaderboard.

    *   **User Management (Roles & Banning)**:
        *   Admins can view all users, change their roles (viewer, editor, admin), and ban/unban users.

    *   **Campaign Oversight & Moderation**:
        *   Admins can view and filter all campaigns from all users.
        *   Can inspect full campaign details in a read-only view.
        *   Can flag/unflag campaigns and add moderation notes.
        *   Can delete any campaign.

    *   **Content Version Moderation (Flagged Content View)**:
        *   A dedicated "Flagged Content" tab in the admin dashboard shows all individual content versions that have been flagged across the platform.
        *   Admins can preview flagged content and unflag it.

    *   **Platform Analytics (Admin View)**:
        *   Displays key metrics and charts for platform activity.

    *   **Data Export (Conceptual)**:
        *   Placeholder buttons on the admin dashboard simulate CSV export for platform data.

-----------------
4. Data Models (Key MongoDB Schemas)
-----------------
    *   **User** (`users` collection):
        *   `role`: String ('viewer', 'editor', 'admin', default 'editor')
        *   `isBanned`: Boolean (default false)
        *   ...and other fields like `name`, `email`, `totalXP`, `level`.

    *   **Campaign** (`campaigns` collection):
        *   `userId`: String (links to User)
        *   `brandProfile`: Object (optional, stores AI-generated brand analysis)
        *   `agentDebates`: Array of `AgentInteraction` objects
        *   `contentVersions`: Array of `ContentVersion` objects
        *   `scheduledPosts`: Array of `ScheduledPost` objects (optional)
        *   `isFlagged`: Boolean (for admin moderation)
        *   ...and other fields like `title`, `brief`, `status`.

    *   **ContentVersion** (embedded in Campaign):
        *   `isFlagged`: Boolean (default false, for admin moderation of a specific version)
        *   `adminModerationNotes`: String (admin notes for this version)
        *   ...and other fields like `versionNumber`, `changeSummary`, `multiFormatContentSnapshot`.

-----------------
5. AI Integration
-----------------
*   **Genkit**: Primary framework for AI flows (`src/ai/`).
*   **Google Gemini**: Main LLM for all AI tasks.
*   **Key Flows**:
    *   `brand-learning.ts`: Analyzes text to create a `BrandProfile`.
    *   `agent-debate.ts`: Simulates the Creative War Room.
    *   `content-generation.ts`: Generates multi-format content.
    *   `content-strategy-flow.ts`: Creates the content calendar.
    *   `revise-content-flow.ts`: Rewrites content based on instructions.
    *   `brand-audit-flow.ts`: Audits content against a brand profile.
    *   `translate-content-flow.ts`: Translates content.
    *   `optimize-content-flow.ts`: Improves content for a performance goal.

-----------------
6. Setup & Configuration
-----------------
Refer to `README.md`. Key `.env.local` variables remain `MONGODB_URI`, `NEXTAUTH_SECRET`, etc.

-----------------
7. Middleware & Security
-----------------
*   **Route Protection**: `src/middleware.ts` protects `/admin/*` and `/creator-dashboard/*` routes.
*   **API Protection**: API routes check for authentication and, in many cases, user ownership of the resource (e.g., a user can only modify their own campaigns). Admin APIs check for the 'admin' role.

-----------------
8. Future Enhancements
-----------------
*   UI for users to manage their profile (name, password).
*   Real-time Agent Debates (WebSockets).
*   Full File Uploads & Processing (Cloud Storage).
*   Functional A/B Testing and performance feedback loops.
*   Real Analytics & Data Export (beyond placeholders).
*   Team Collaboration features.
*   AI Usage Monitoring & Cost Tracking.
